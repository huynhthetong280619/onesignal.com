{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","window","NOTIFICATIONS_DATA","isFirefox","InstallTrigger","CoreId","AppId","DeviceId","useEffect","initOneSignal","a","console","log","OneSignal","push","init","allowLocalhostAsSecureOrigin","appId","autoRegister","notifyButton","enable","getUserId","OneSignalId","fetch","method","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","DeviceType","registerResult","on","isSubscribed","event","warn","DeliveryId","id","Content","content","Heading","heading","getId","indexedDB","open","className","src","logo","alt","href","target","rel","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,MAA0B,iC,MCwI1BA,MApIf,WACgBC,OAAOC,mBAArB,IACMC,EAAsC,qBAAnBC,eAEnBC,EAAS,uCACTC,EAAQ,uCACRC,GAAYJ,EAAY,KAAO,MAAQ,sCAC7CK,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAa,uCAAG,4BAAAC,EAAA,sDACpBC,QAAQC,IAAI,SACNC,EAAYZ,OAAOY,WAAa,IAC5BC,MAAK,WACbD,EAAUE,KAAK,CACbC,8BAA8B,EAC9BC,MAAOX,EACPY,cAAc,EACdC,aAAc,CAChBC,QAAQ,KAGRP,EAAUQ,UAAV,uCAAoB,WAAgBC,GAAhB,eAAAZ,EAAA,yDAClBC,QAAQC,IAAI,qBAAsBU,IAC9BA,EAFc,gCAGaC,MAAM,8CAA+C,CAChFC,OAAQ,OAERC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CACnB1B,QACAD,SACAE,WACAe,cACAW,WAAY,MAlBA,OAGVC,EAHU,OAqBhBvB,QAAQC,IAAIsB,GArBI,2CAApB,uDAwBArB,EAAUsB,GAAG,sBAAsB,SAAUC,GAC3CzB,QAAQC,IAAI,wCAAyCwB,GACrDvB,EAAUQ,UAAV,uCAAoB,WAAgBC,GAAhB,eAAAZ,EAAA,yDAClBC,QAAQC,IAAI,qBAAsBU,IAC9BA,EAFc,gCAGaC,MAAM,8CAA+C,CAChFC,OAAQ,OAERC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CACnB1B,QACAD,SACAE,WACAe,cACAW,WAAY,MAlBA,OAGVC,EAHU,OAqBhBvB,QAAQC,IAAIsB,GArBI,2CAApB,0DA2BFrB,EAAUsB,GAAG,sBAAb,uCAAoC,WAAgBE,GAAhB,SAAA3B,EAAA,6DAClCC,QAAQ2B,KAAK,oCAAqCD,GADhB,SAE5Bd,MAAM,uCAAwC,CAClDC,OAAQ,OAERC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CACnBO,WAAYF,EAAMG,GAClBC,QAASJ,EAAMK,QACfC,QAASN,EAAMO,YAfe,2CAApC,0DAjEkB,2CAAH,qDAwFbC,EAAK,uCAAG,4BAAAnC,EAAA,6DACNoC,EAAY7C,OAAO6C,UAAUC,KAAK,oBAAoB,GADhD,kBAELD,GAFK,2CAAH,qDAKX,OACE,qBAAKE,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,qBAAKN,UAAU,MAAf,SACE,wBACEO,QAAS,WACTV,KAFF,2BChHKW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.357f7b56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {useEffect} from 'react'\n\nfunction App() {\n  const model = window.NOTIFICATIONS_DATA || {};\n  const isFirefox = typeof InstallTrigger !== 'undefined';\n\n  const CoreId = '341e5cda-c408-413b-be62-a55722e88140';\n  const AppId = \"6bd3479f-38df-47a4-94c6-5fd03c98c58a\";\n  const DeviceId = (isFirefox ? 'ff' : 'ch') + '069d53b-6892-4610-a33b-ff129eea80b9';\n  useEffect(() => {\n    initOneSignal();\n  }, [])\n  \n  const initOneSignal = async () => {\n    console.log('xxxx')\n    const OneSignal = window.OneSignal || [];\n    OneSignal.push(function () {\n      OneSignal.init({\n        allowLocalhostAsSecureOrigin: true,\n        appId: AppId,\n        autoRegister: false,\n        notifyButton: {\n      enable: true,\n    },\n      });\n      OneSignal.getUserId(async function (OneSignalId) {\n        console.log(\"OneSignal User ID:\", OneSignalId);\n        if (OneSignalId) {\n          const registerResult = await fetch('https://118.69.134.126:8080/device/register', {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            // mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify({\n              AppId,\n              CoreId,\n              DeviceId,\n              OneSignalId,\n              DeviceType: 5\n            }) // body data type must match \"Content-Type\" header\n          });\n          console.log(registerResult);\n        }\n      });\n      OneSignal.on('subscriptionChange', function (isSubscribed) {\n        console.log(\"The user's subscription state is now:\", isSubscribed);\n        OneSignal.getUserId(async function (OneSignalId) {\n          console.log(\"OneSignal User ID:\", OneSignalId);\n          if (OneSignalId) {\n            const registerResult = await fetch('https://118.69.134.126:8080/device/register', {\n              method: 'POST', // *GET, POST, PUT, DELETE, etc.\n              // mode: 'cors', // no-cors, *cors, same-origin\n              cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n              credentials: 'same-origin', // include, *same-origin, omit\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              redirect: 'follow', // manual, *follow, error\n              referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n              body: JSON.stringify({\n                AppId,\n                CoreId,\n                DeviceId,\n                OneSignalId,\n                DeviceType: 5\n              }) // body data type must match \"Content-Type\" header\n            });\n            console.log(registerResult);\n          }\n        });\n\n\n      });\n      OneSignal.on('notificationDisplay', async function (event) {\n        console.warn('OneSignal notification displayed:', event);\n        await fetch('https://118.69.134.126:8082/delivery', {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          // mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          body: JSON.stringify({\n            DeliveryId: event.id,\n            Content: event.content,\n            Heading: event.heading\n          }) // body data type must match \"Content-Type\" header\n        });\n      });\n\n      //This event can be listened to via the `on()` or `once()` listener\n    });\n  }\n  const getId = async () => {\n    const indexedDB = window.indexedDB.open('ONE_SIGNAL_SDK_DB',3);\n    return indexedDB;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <div className=\"App\">\n          <button \n            onClick={() => {\n            getId();\n          }}>\n            click\n          </button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}